---
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Sarah Jumps | Noah Eisen</title>
		<meta name="description" content="A Doodle Jump clone game built with JavaScript" />
		<style>
			:root {
				--primary-color: #3b82f6;
				--accent-color: #10b981;
				--gold-color: #f59e0b;
				--text-color: #e5e7eb;
				--text-muted: #9ca3af;
				--background-color: #111827;
				--card-bg: #1f2937;
				--card-border: #374151;
				--link-color: #60a5fa;
				--link-hover-color: #93c5fd;
				--glow-color: rgba(59, 130, 246, 0.5);
			}

			body {
				margin: 0;
				padding: 0;
				min-height: 100vh;
				font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
				background-color: var(--background-color);
				color: var(--text-color);
				line-height: 1.6;
			}

			.container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 2rem;
			}

			header {
				margin-bottom: 2rem;
				text-align: center;
			}

			h1 {
				font-size: 2.5rem;
				font-weight: 700;
				margin-bottom: 1rem;
				background: linear-gradient(to right, var(--primary-color), var(--accent-color));
				-webkit-background-clip: text;
				-webkit-text-fill-color: transparent;
			}

			.back-link {
				display: inline-block;
				margin-top: 1rem;
				color: var(--link-color);
				text-decoration: none;
				font-weight: 500;
				transition: all 0.2s ease;
			}

			.back-link:hover {
				color: var(--link-hover-color);
				text-shadow: 0 0 8px var(--glow-color);
			}

			.game-container {
				display: flex;
				justify-content: center;
				align-items: center;
				margin: 2rem 0;
			}

			.game-window {
				width: 400px;
				height: 600px;
				background-color: var(--card-bg);
				border: 2px solid var(--card-border);
				border-radius: 8px;
				overflow: hidden;
				position: relative;
				box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
			}

			.game-canvas {
				width: 100%;
				height: 100%;
				background-color: #f0f0f0;
			}

			.game-controls {
				margin-top: 1rem;
				text-align: center;
				color: var(--text-muted);
				font-size: 0.9rem;
			}

			.game-description {
				max-width: 800px;
				margin: 2rem auto;
				padding: 1.5rem;
				background-color: var(--card-bg);
				border: 1px solid var(--card-border);
				border-radius: 8px;
			}

			.game-description h2 {
				font-size: 1.5rem;
				margin-bottom: 1rem;
				color: var(--primary-color);
			}

			.game-description p {
				margin-bottom: 1rem;
				color: var(--text-muted);
			}

			@media (max-width: 768px) {
				.container {
					padding: 1rem;
				}

				.game-window {
					width: 100%;
					height: 500px;
				}
			}
		</style>
	</head>
	<body>
		<main class="container" role="main">
			<header>
				<h1>Sarah Jumps</h1>
				<a href="/" class="back-link" tabindex="0" aria-label="Back to homepage">‚Üê Back to homepage</a>
			</header>

			<div class="game-container">
				<div class="game-window">
					<canvas id="gameCanvas" class="game-canvas" width="400" height="600"></canvas>
				</div>
			</div>

			<div class="game-controls">
				<p id="controls-text">Loading controls...</p>
			</div>
		</main>

		<script>
			// Import the game
			import { SarahJumps } from '../../games/sarah-jumps/js/SarahJumps';
			
			// Initialize the game when the DOM is loaded
			document.addEventListener('DOMContentLoaded', () => {
				const game = new SarahJumps('gameCanvas');
				game.start();
				
				// Update controls text based on device type
				const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
				const controlsText = document.getElementById('controls-text');
				if (controlsText) {
					if (isMobile) {
						controlsText.innerHTML = 'Touch left or right to move<br>Tap to start/restart the game';
					} else {
						controlsText.innerHTML = 'Use arrow keys or A/D to move left/right<br>Press Space to start/restart the game';
					}
				}
				
				// Clean up when the page is unloaded
				window.addEventListener('unload', () => {
					game.cleanup();
				});
			});
		</script>
	</body>
</html> 